class UrTube:
    """
    Атриубты:
    users(список объектов User),
    videos(список объектов Video),
    current_user(текущий пользователь, User)

    Методы:
    Метод log_in, который принимает на вход аргументы: nickname, password и пытается найти пользователя
          в users с такими же логином и паролем. Если такой пользователь существует, то current_user меняется
          на найденного. Помните, что password передаётся в виде строки, а сравнивается по хэшу.
    Метод register, который принимает три аргумента: nickname, password, age, и добавляет пользователя в список,
          если пользователя не существует (с таким же nickname). Если существует, выводит на экран: "Пользователь
          {nickname} уже существует". После регистрации, вход выполняется автоматически.
    Метод log_out для сброса текущего пользователя на None.
    Метод add, который принимает неограниченное кол-во объектов класса Video и все добавляет в videos, если с таким же
          названием видео ещё не существует. В противном случае ничего не происходит.
    Метод get_videos, который принимает поисковое слово и возвращает список названий всех видео, содержащих поисковое
          слово. Следует учесть, что слово 'UrbaN' присутствует в строке 'Urban the best' (не учитывать регистр).
    Метод watch_video, который принимает название фильма, если не находит точного совпадения(вплоть до пробела),
          то ничего не воспроизводится, если же находит - ведётся отчёт в консоль на какой секунде ведётся просмотр.
          После текущее время просмотра данного видео сбрасывается.
    """

    def __init__(self, users: list, videos: list):
        self.users = users
        self.videos = videos
        current_user(текущий
        пользователь, User)

    class Video:
        """
        Атрибуты:
        title(заголовок, строка),
        duration(продолжительность, секунды),
        time_now(секунда остановки (изначально 0)),
        adult_mode(ограничение по возрасту, bool (False по умолчанию))
        """

        def __init__(self, title: str, duration: int, time_now=0: int, adult_mode = False

        : bool):
        self.title = title
        self.duration = duration
        self.time_now = time_now
        self.adult_mode = adult_mode


class User:
    """
    Атрибуты:
    nickname(имя пользователя, строка),
    password(в хэшированном виде, число),
    age(возраст, число)
    """

    def __init__(self, nickname: str, password: int, age: int):
        self.nickname = nickname
        self.password = password
        self.age = age
